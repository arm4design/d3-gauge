{"name":"D3-gauge","tagline":"Gauge visualization built on top of d3.","body":"# d3-gauge\r\n\r\nGauge visualization built on top of d3.\r\n\r\n[![demo](https://github.com/thlorenz/d3-gauge/raw/master/assets/gauge-demo.gif)]()\r\n\r\n```js\r\nvar d3gauge = require('d3-gauge');\r\n\r\n// \r\nvar gauge = d3gauge(document.getElementById('simple-gauge'));\r\ngauge.write(39);\r\n```\r\n\r\n**Note:** please make sure to [include the appropriate `css`](#styling) in your page, otherwise all you'll see is a big black\r\ncircle.\r\n\r\n## Installation\r\n\r\n    npm install d3-gauge\r\n## Try it\r\n\r\n```sh\r\nnpm explore d3-gauge\r\nnpm run demo\r\n```\r\n\r\n## API\r\n\r\n####gauge (el[, opts])*\r\n\r\nCreates a gauge appended to the given DOM element.\r\n\r\n@name Gauge\r\n@function\r\n**params:**\r\n\r\n- el *DOMElement* to which the gauge is appended\r\n- opts *Object* gauge configuration with the following properties all of which have sensible defaults:\r\n  - label {String} that appears in the top portion of the gauge\r\n  - clazz {String} class to apply to the gauge element in order to support custom styling\r\n  - size {Number} the over all size (radius) of the gauge\r\n  - min {Number} the minimum value that the gauge measures\r\n  - max {Number} the maximum value that the gauge measures\r\n  - majorTicks {Number} the number of major ticks to draw\r\n  - minorTicks {Number} the number of minor ticks to draw in between two major ticks\r\n  - needleWidthRatio {Number} tweaks the gauge's needle width\r\n  - needleConatinerRadiusRatio {Number} tweaks the gauge's needle container circumference\r\n  - transitionDuration {Number} the time in ms it takes for the needle to move to a new position\r\n  - zones {Array[Object]} each with the following properties\r\n      - clazz {String} class to apply to the zone element in order to style its fill\r\n      - from {Number} between 0 and 1 to determine zone's start\r\n      - to {Number} between 0 and 1 to determine zone's end\r\n\r\n**returns:**\r\n\r\n*Object* the gauge with a `write` method\r\n\r\n**Note:** have a look at the [default opts](https://github.com/thlorenz/d3-gauge/blob/master/defaults/simple.js)\r\n\r\n###*gauge.write = function(value, transitionDuration)*\r\n\r\nWrites a value to the gauge and updates its state, i.e. needle position, accordingly.\r\n@name write\r\n@function\r\n**params:**\r\n\r\n- value *Number* the new gauge value, should be in between min and max\r\n- transitionDuration *Number* (optional) transition duration, if not supplied the configured duration is used\r\n\r\n## Styling\r\n\r\nd3-gauge can be custom styled and none of the features are visible if no style is included at all.\r\n\r\nPlease have a look [at the styles included here](https://github.com/thlorenz/d3-gauge/tree/master/defaults) in order to\r\nget an idea of what parts you can tweak to your liking.\r\n\r\n## Kudos\r\n\r\nThis implementation was highly inspired by [this post](http://bl.ocks.org/tomerd/1499279).\r\n\r\nAlthough lots of work went into cleaning the code up and making the gauge configurable and stylable, the main idea came\r\nfrom there.\r\n\r\n## License\r\n\r\nMIT\r\n","google":"UA-32151587-6","note":"Don't delete this file! It's used internally to help with page regeneration."}